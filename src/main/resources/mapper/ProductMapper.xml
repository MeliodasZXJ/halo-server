<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.halo.dao.ProductDao">
    <cache/>
    <resultMap id="ProductResultMap" type="com.halo.entity.Product">
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="title" property="title"/>
        <result column="price" property="price"/>
        <result column="image" property="image"/>
        <result column="stock" property="stock"/>
        <result column="cate_id" property="cateId"/>
        <result column="type_id" property="typeId"/>
        <result column="brand_id" property="brandId"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_updated" property="gmtUpdated"/>
    </resultMap>
    <parameterMap id="Product" type="com.halo.entity.Product"/>
    <select id="getItems" resultMap="ProductResultMap">
        SELECT
            id,
            image,
            name,
            title,
            price
        FROM hl_product
        LIMIT #{pageIndex}, #{pageCount}
    </select>
    <select id="getItemsByCateId" resultMap="ProductResultMap">
        SELECT
            id,
            image,
            name,
            title,
            price
        FROM hl_product
        WHERE cate_id = #{cateId}
    </select>
    <select id="getItemsByTypeId" resultMap="ProductResultMap">
        SELECT
            id,
            image,
            name,
            title,
            price
        FROM hl_product
        WHERE type_id = #{typeId}
    </select>
    <select id="getItemsByBrandId" resultMap="ProductResultMap">
        SELECT
            id,
            image,
            name,
            title,
            price
        FROM hl_product
        WHERE brand_id = #{brandId}
    </select>
    <select id="getItemsByCateIdAndTypeId" resultMap="ProductResultMap">
        SELECT
            id,
            image,
            name,
            title,
            price
        FROM hl_product
        WHERE cate_id = #{cateId} AND type_id = #{typeId}
    </select>
    <select id="getItemsByCateIdAndBrandId" resultMap="ProductResultMap">
        SELECT
            id,
            image,
            name,
            title,
            price
        FROM hl_product
        WHERE cate_id = #{cateId} AND brand_id = #{brandId}
    </select>
    <select id="searchItemByName" resultMap="ProductResultMap">
        SELECT
            id,
            image,
            name,
            title,
            price
        FROM hl_product
        WHERE position(#{name} in name)
    </select>

    <update id="updateMinusStockByProId">
        UPDATE hl_product
        SET stock=stock-1
        WHERE id=#{proId} AND stock>0
    </update>
    <delete id="deleteProductById">
        DELETE FROM hl_product
        WHERE id = #{id}
    </delete>
    <delete id="deleteProductDetailById">
        DELETE FROM hl_product_detail
        WHERE pro_id = #{id}
    </delete>
    <delete id="deleteProductImageById">
        DELETE FROM hl_product_image
        WHERE pro_id = #{id}
    </delete>
    <delete id="deleteMultiProductsById" parameterType="java.util.ArrayList">
        DELETE FROM hl_product
        WHERE id IN
        <foreach collection="array" separator="," open="(" close=")" item="idItem">
            #{idItem}
        </foreach>
    </delete>
    <delete id="deleteMultiProductDetailsById" parameterType="java.util.ArrayList">
        DELETE FROM hl_product_detail
        WHERE pro_id IN
        <foreach collection="array" separator="," open="(" close=")" item="idItem">
            #{idItem}
        </foreach>
    </delete>
    <delete id="deleteMultiProductImagesById" parameterType="java.util.ArrayList">
        DELETE FROM hl_product_image
        WHERE pro_id IN
        <foreach collection="array" separator="," open="(" close=")" item="idItem">
            #{idItem}
        </foreach>
    </delete>
    <update id="updateProductInfoById">
        UPDATE hl_product
        SET name = #{name}, stock = stock + #{num}, price = #{price}, gmt_updated = now()
        WHERE id = #{id}
    </update>
    <select id="getStockById" resultType="java.lang.Integer">
        SELECT
            stock
        FROM hl_product
        WHERE id = #{id}
    </select>

    <resultMap id="ItemInfoResultMap" type="com.halo.dto.ItemInfoDTO">
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="description" property="description"/>
        <result column="price" property="price"/>
        <result column="stock" property="stock"/>
        <result column="type_name" property="typeName"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_updated" property="gmtUpdated"/>
    </resultMap>
    <parameterMap id="ItemInfo" type="com.halo.dto.ItemInfoDTO"/>
    <select id="getItemsInfo" resultMap="ItemInfoResultMap">
        SELECT
            hl_product.id,
            name,
            description,
            price,
            stock,
            type_name,
            hl_product.gmt_create,
            hl_product.gmt_updated
        FROM hl_product, hl_product_detail, hl_type
        WHERE hl_product.id=pro_id AND type_id=hl_type.id
        LIMIT #{pageIndex}, #{pageCount}
    </select>
    <select id="getItemsInfoByTypeAndName" resultMap="ItemInfoResultMap">
        SELECT
            hl_product.id,
            name,
            description,
            price,
            stock,
            type_name,
            hl_product.gmt_create,
            hl_product.gmt_updated
        FROM hl_product, hl_product_detail, hl_type
        WHERE hl_product.id=pro_id AND type_id=hl_type.id AND position(#{type} IN type_name)
            <if test="name != null">
                AND position(#{name} IN name)
            </if>
        LIMIT #{pageIndex}, #{pageCount}
    </select>
</mapper>